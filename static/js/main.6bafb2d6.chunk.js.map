{"version":3,"sources":["components/DesignCase.tsx","components/ProductionTutorials.tsx","components/Reference.tsx","components/Contributors.tsx","components/SimilarCharts.tsx","components/context.ts","utils/index.ts","utils/request.ts","api/upload.ts","template.ts","components/CBKSelect/index.tsx","utils/template.ts","App.tsx","components/ChartProps.tsx","utils/exportFile.ts","reportWebVitals.ts","index.tsx"],"names":["CaseContent","styled","div","CaseBlock","Container","children","Item","image","description","link","src","className","href","target","rel","Table","table","Td","td","ShowAllButton","ContributeName","span","ChartContext","React","createContext","chartList","currentChart","Object2FormData","data","form","FormData","key","Object","prototype","hasOwnProperty","call","value","append","http","Axios","create","baseURL","timeout","request","config","a","tip","errorTip","result","status","isObjectLike","error","response","url","notification","message","checkResult","code","String","prefix2","zhCompletedKB","CKBJson","options","chartInfo","name","category","purpose","shape","family","id","push","path","Option","Select","CBKSelect","props","showSearch","style","width","placeholder","optionFilterProp","onChange","onFocus","onBlur","onSearch","val","filterOption","input","option","toLowerCase","indexOf","map","item","template","string","interpolate","replace","match","$1","components","PlaceHolder","opacity","DesignCaseContainer","DesignCase","DesignCaseItem","ProductionTutorials","newTableData","background","keys","text","forEach","group","length","newGroup","subLength","linkText","groupData","i","subItem","j","columnOne","rowSpan","columnTwo","columnThree","concat","assign","handleTableData","index","textAlign","paddingLeft","textDecoration","color","renderTR","Reference","useState","show","setShow","useSpring","tension","friction","precision","to","height","overflow","set","onClick","Button","Contributors","marginBottom","info","contentEl","date","content","trigger","placement","size","SimilarCharts","ChartProps","useContext","scope","some","plugins","frontmatter","gfm","highlight","App","setContent","loading","setLoading","isModalVisible","setModalVisible","setChartInfo","uploadImages","files","file","smfile","method","then","imgList","title","alt","handleRepalceAllImg","imgReg","matchList","Array","isArray","newCotnet","urlList","urls","oldURL","neURL","success","warn","handleCancel","type","fileName","eleLink","document","createElement","download","display","blob","Blob","URL","createObjectURL","body","appendChild","click","removeChild","exportFile","disabled","undefined","mode","newValue","overridePreview","el","render","visible","onOk","compiled","enName","all","letter","toUpperCase","onCancel","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6bafb2d6.chunk.js","sourcesContent":["// @ts-nocheck\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst CaseContent = styled.div`\n  margin: 0 60px;\n  column-count: 2;\n  column-gap: 30px;\n\n  >div{\n    break-inside: avoid;\n  }\n\n  >div:not(:first-child) {\n    margin-top: 30px;\n  }\n`;\n\n// TODO 点击查询放大图\nconst Container = ({ children }) => {\n  return <CaseContent>{children}</CaseContent>;\n}\n\ninterface ItemProps {\n  description: string;\n  image: string;\n  link?: string;\n}\n\n\nconst CaseBlock = styled.div`\n  padding: 20px;\n  /* 该用 column count 方式后，第二排上面的阴影看不到了，先用 border 实现 */\n  /* box-shadow: 0px 0px 4px 2px rgba(211, 211, 211, 0.5); */\n  border: 1px solid rgb(230, 230, 230);\n  overflow: hidden;\n\n  img {\n    width: 100%;\n  }\n\n  .case-text {\n    padding: 10px 20px;\n    color: #4a4a4a;\n    font-size: 14px;\n    text-align: justify;\n    line-height: 30px;\n    @media screen and (max-width: 600px) {\n      line-height: 20px;\n      font-size: 13px;\n      padding: 10px 0;\n    }\n  }\n\n  .view-origin {\n    border: 1px solid #d0d0d0;\n    float: right;\n    font-size: 14px;\n    border-radius: 2px;\n    text-align: center;\n    padding: 8px 12px;\n    cursor: pointer;\n    color: rgb(74, 74, 74);\n    text-decoration: none;\n  }\n`;\n\nconst Item: React.FC<ItemProps> = ({ image, description, link }) => {\n  return (\n    <CaseBlock>\n      <div\n      // TODO 预览\n      // onClick={() => this.handlePreview(i * 2)}\n      >\n        <img src={image} />\n      </div>\n      <div className=\"case-text\">{description}</div>\n      {link ? (\n        <a className=\"view-origin\" href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n          查看出处\n        </a>\n      ) : null}\n    </CaseBlock>\n  )\n}\n\nexport default { Container, Item };","// @ts-nocheck\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n  table-layout: fixed;\n`;\n\nconst Td = styled.td`\n  border: 1px solid #d0d0d0;\n  padding: 10px 10px;\n  text-align: center;\n  color: #4a4a4a;\n`;\n\ntype ToolItem = {\n  readonly link?: string;\n  readonly linkText: string;\n}\n\ninterface Props {\n  data: Record<string, Record<string, ToolItem[]>>\n}\n\nexport const ProductionTutorials: React.FC<Props> = ({ data }) => {\n  const newTableData = handleTableData(data || {});\n  return (\n    <Table>\n      <tbody>{newTableData.map((item, i) => renderTR(item, i))}</tbody>\n    </Table>\n  );\n}\n\nfunction renderTR(item, index) {\n  const columnOne = item.columnOne ? (\n    <Td width=\"25%\" rowSpan={item.columnOne.rowSpan}>\n      {item.columnOne.text}\n    </Td>\n  ) : null;\n\n  const columnTwo = item.columnTwo ? (\n    <Td width=\"25%\" rowSpan={item.columnTwo.rowSpan}>\n      {item.columnTwo.text}\n    </Td>\n  ) : null;\n\n  const columnThree = (\n    <Td width=\"50%\" style={{ textAlign: 'left', paddingLeft: '15px' }}>\n      {item.columnThree.link ? (\n        <a href={item.columnThree.link} style={{ textDecoration: 'underline', color: '#4a4a4a' }} target=\"__blank\">\n          {item.columnThree.linkText}\n        </a>\n      ) : (\n          item.columnThree.linkText\n        )}\n    </Td>\n  );\n\n  return (\n    <tr style={item.background ? { background: '#f6f6f6' } : null} key={index}>\n      {columnOne}\n      {columnTwo}\n      {columnThree}\n    </tr>\n  );\n}\n\n\nfunction handleTableData(data: Props['data']) {\n  let result = [];\n  let background = 0;\n  const newData = Object.keys(data).map((key) => ({\n    text: key,\n    children: data[key]\n  }));\n\n  newData.forEach((group) => {\n    let length = 0;\n    const newGroup = Object.keys(group.children).map((key) => {\n      var subLength;\n      // 插入空数据的文本，计算长度\n      if (group.children[key].length === 0) {\n        group.children[key] = [{ linkText: '--' }];\n        subLength = 1;\n      } else {\n        subLength = group.children[key].length;\n      }\n      length += subLength;\n      return {\n        text: key,\n        children: group.children[key],\n        length: subLength\n      };\n    });\n\n    // 每一大类的数据\n    var groupData = [];\n    // 每一大类的背景色不同\n    background = 1 - background;\n    newGroup.forEach((item, i) => {\n      item.children.forEach((subItem, j) => {\n        if (j === 0) {\n          if (i === 0) {\n            // 大类第一项，含有三列\n            groupData.push({\n              columnOne: {\n                rowSpan: length,\n                text: group.text\n              },\n              columnTwo: {\n                rowSpan: item.length,\n                text: item.text\n              },\n              columnThree: subItem,\n              background: background\n            });\n          } else {\n            // 小类第一项，含有两列\n            groupData.push({\n              columnTwo: {\n                rowSpan: item.length,\n                text: item.text\n              },\n              columnThree: subItem,\n              background: background\n            });\n          }\n        } else {\n          // 最后一列\n          groupData.push({\n            columnThree: subItem,\n            background: background\n          });\n        }\n      });\n    });\n\n    // TODO 这一页的类型待补全\n    result = result.concat(groupData);\n    Object.assign(group, {\n      children: newGroup,\n      length: length\n    });\n    // group.children = newGroup;\n    // group.length = length;\n  });\n  return result;\n}\n","// @ts-nocheck\nimport React, { useState } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\n\nconst Container = styled.div`\n  position: relative;\n  ol li {\n    color: rgb(187, 187, 187);\n  }\n`;\n\nconst ShowAllButton = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: flex-end;\n  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.8) 30%, rgba(255, 255, 255, 1));\n`;\n\nexport const Reference: React.FC = ({ children }) => {\n  const [show, setShow] = useState<boolean>(false);\n\n  const [props, set] = useSpring(() => ({\n    config: { tension: 1000, friction: 100, precision: 1 },\n    to: { height: 300, overflow: 'hidden' }\n  }));\n\n  const showAll = () => {\n    setShow(true);\n    set({ to: { height: 'auto' } });\n  };\n\n  return (\n    <Container>\n      <animated.div className=\"reference\" style={props}>{children}</animated.div>\n      {show ? null : (\n        <ShowAllButton onClick={showAll}>\n          <Button style={{ color: '#343E73' }}>[ 查看所有 ]</Button>\n        </ShowAllButton>\n      )}\n    </Container>\n  );\n};","// @ts-nocheck\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Popover } from 'antd';\nimport { size } from 'lodash';\n\nconst ContributeName = styled.span`\nmargin: 0 10px;\n`;\n\n// TODO antd v4 popover 没办法自己消失了...\nexport const Contributors = ({ data = [] }) => {\n  return (\n    <div style={{ marginBottom: '18px' }}>\n      {Object.keys(data).map((key, i) => {\n        const info = data[key];\n\n        const contentEl = (\n          <>\n            {info.map((item, index) => <div key={index}>{item.date} {item.content}</div>)}\n          </>\n        );\n        return (\n          <span key={i}>\n            <Popover trigger=\"hover\" placement=\"right\" content={contentEl}>\n              <ContributeName>{key}</ContributeName>\n            </Popover>\n            {size(data) !== i + 1 && '  •  '}\n          </span>\n        );\n      })}\n    </div>\n  );\n};","import React, { useState } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  marginBottom: '18px'\r\n\r\n`;\r\n\r\nexport const SimilarCharts: React.FC = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <i>此处会自动识别</i>\r\n     \r\n    </Container>\r\n  );\r\n};","import React from 'react';\r\n\r\n\r\nexport interface ChartInfo {\r\n    name: string\r\n    image: string\r\n    path: string\r\n    /** 常用使用这个字段 */\r\n    family: string[]\r\n    /** 形状 */\r\n    shape: string[]\r\n    /** 图类 */\r\n    category: string[]\r\n    /** 用途 */\r\n    purpose: string[]\r\n    /**\r\n     * 便于搜索\r\n     * $searchMap: { 类型-属性值: 1 }\r\n     */\r\n    $searchMap: Record<string, number>\r\n}\r\n\r\n  \r\nexport const ChartContext = React.createContext<{\r\n    chartList: ChartInfo[];\r\n    currentChart: ChartInfo | null;\r\n}>({\r\n    chartList: [],\r\n    currentChart: null,\r\n});\r\n\r\n ","export function Object2FormData(data: Record<string, any>) {\r\n    const form = new FormData()\r\n    for (const key in data) {\r\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n            const value = data[key]\r\n            form.append(key, value)\r\n        }\r\n    }\r\n    return form\r\n}\r\n\r\n\r\nexport function toHump(name: string) {\r\n\r\n    return name.replace(/^(\\w)/,function(all, letter){\r\n        return letter.toUpperCase();\r\n    }).replace(/\\_(\\w)/g, function(all, letter){\r\n        return ' ' + letter.toUpperCase();\r\n    });\r\n}","import Axios, { AxiosRequestConfig } from 'axios';\nimport { isObjectLike } from 'lodash';\nimport { notification } from 'antd';\nimport { ResponseData } from '../interface/http';\ninterface Config extends AxiosRequestConfig {\n  errorTip?: string; // 错误提示内容，获取后端数据失败时，\n}\nexport const rootPath = '/api';\n\nexport const http = Axios.create({\n  baseURL: rootPath,\n  timeout: 300000,\n  // headers: {\n  //   'Content-Type': 'application/json',\n  // },\n  // withCredentials: true,\n});\n\n\nexport const request = async function<T = any>(config: Config) {\n  const tip = config.errorTip || '网络开小差了！';\n  try {\n    const result = await http.request<ResponseData<T>>(config);\n    if (\n      result &&\n      result.status >= 200 &&\n      result.status < 300 &&\n      isObjectLike(result.data)\n    ) {\n      return result.data;\n    }\n\n    const error = {\n      tip,\n      response: result,\n      url: config.url,\n    };\n    notification.error({\n      message: `${tip}`,\n      description: error.tip,\n    });\n    throw error\n  } catch (error) {\n    notification.error({\n      message: `${tip}`,\n      description: `${error}`,\n    });\n    throw error\n  }\n\n\n};\nexport default request;\n/**\n * 检测服务端处理结果，失败就提示，成功就返回data.data\n * 注意：下游将无法获取data.code 和data.massage，下游可在catch中处理失败的情况\n * @param res\n */\nexport function checkResult<T extends any>(data: ResponseData<T>) {\n  if (data.code !== 0 && data.message) {\n    notification.error({\n      message: `请求错误 ${data.code}`,\n      description: String(data.message),\n    });\n    throw data.message;\n  } else {\n    return data.data;\n  }\n}\n","import { Object2FormData } from '../utils';\r\nimport request, { checkResult } from '../utils/request';\r\n\r\n\r\nconst prefix2 = process.env.NODE_ENV === 'production' ? '//api.8and1.cn/mdx-editor/v1' : 'http://127.0.0.1:7001/api/v1';\r\n\r\nexport function uploadImg(data: any) {\r\n  return request({\r\n    method: \"POST\",\r\n    url: `${prefix2}/common/uploadImg`,\r\n    data: Object2FormData(data),\r\n  }).then(checkResult);\r\n}\r\n\r\nexport function uploadURL(urlList: string[]) {\r\n  return request<Record<string, string>>({\r\n    method: \"POST\",\r\n    url: `${prefix2}/common/uploadFromNetWork`,\r\n    data: {\r\n      urls: urlList\r\n    },\r\n  }).then(checkResult);\r\n}","export const mdxString = `\r\n# 饼图 - Pie Chart\r\n\r\n\r\n<section class='chart-detail-overview'>\r\n\r\n![pie-chart-overview](https://i.loli.net/2021/09/27/gx8sTAEz53rSwcq.png)\r\n\r\n饼图，或称饼状图，是一个划分为几个扇形的圆形统计图表。在饼图中，每个扇形的弧长（以及圆心角和面积）大小，表示该种类占总体的比例，且这些扇形合在一起刚好是一个完全的圆形。\r\n\r\n饼图最显著的功能在于表现“占比”。习惯上，人们也用饼图来比较扇形的大小，从而获得对数据的认知。但是，由于人类对“角度”的感知力并不如“长度”，在需要准确的表达数值（尤其是当数值接近、或数值很多）时，饼图常常不能胜任，建议用柱状图代替。\r\n\r\n从数据来看，饼图一般需要一个分类数据字段、一个连续数据字段。值得注意的是，分类字段的数据，在图表使用的语境下，应当构成一个整体（例如一班、二班、三班，构成了整个高一年级），而不能是独立、无关的。\r\n\r\n使用时，须确认各个扇形的数据加起来等于 100%；避免扇区超过 5 个，尽量让图表简洁明了；注意扇形的排布顺序，一般情况下，将最大的扇形放在 12 点钟方向，接下来按面积依次排列；最后，正确使用颜色，既区分出需要强调的扇形，又不致于让人眼花缭乱。\r\n\r\n</section>\r\n\r\n## 图表属性\r\n\r\n<ChartProps />\r\n\r\n## 图表详解\r\n\r\n### 元素构成\r\n\r\n<PlaceHolder>这里少一张图</PlaceHolder>\r\n\r\n### 适用场景\r\n\r\n1. 想要突出表示某个部分在整体中所占比例，尤其该部分所占比例达到总体的 25%或 50%时。\r\n2. 分类数量最好小于 5 个。\r\n3. 各不同分类间的占比差异明显。\r\n4. 需要确定的图表绘制空间大小（不会随着分类增多有增大画布空间）。\r\n\r\n<img src=\"https://i.loli.net/2021/09/27/kj3sJKaqLXcxyrv.jpg\" width=\"328\" />\r\n\r\n### 不适用场景\r\n\r\n1. 如果变量之间相互独立，并不构成一个整体，那么不可以使用饼图。\r\n2. 饼图也不能用来表现趋势。\r\n3. 由于饼图用面积取代了长度，从而加大了对各个数据进行比较的难度。以下图为例，五个变量中，并没有一个占比特别明显的变量，彼此之间十分接近。如果用饼图表示，人们很难分辨大小。因此，当需要对数据进行比较，分清孰大孰小，尤其是当数据接近时，柱状图更加合适。\r\n\r\n<img src=\"https://i.loli.net/2021/09/27/Vf7NPzm9TdhbF4O.jpg\" width=\"532\" />\r\n\r\n4. 此外，当类别过多时，不建议使用饼图，否则阅读会将很差（如下图）。可行的办法，一是将一些不重要的变量合并为“其他”，避免扇区超过 5 个；二是改用条形图或者表格。尤其是，如果你想让读者清楚的阅读到每一条数据，选用表格会更加直截了当。\r\n\r\n<img src=\"https://i.loli.net/2021/09/27/JYlLvdPAzVyjsIU.jpg\" width=\"566\" />\r\n\r\n## 相似图形\r\n\r\n<SimilarCharts></SimilarCharts>\r\n\r\n## 设计案例\r\n\r\n<DesignCaseContainer>\r\n  <DesignCaseItem\r\n    description=\"用有冲击力的颜色突出最想表现的扇形，其余的则在视觉上弱化处理（比如用灰色处理）。此外，将文字注释巧妙的设计到图形中。\"\r\n    link=\"https://multimedia.scmp.com/news/china/article/2170344/china-2025-aviation/index.html?src=follow-chapter\"\r\n    image=\"http://139.224.62.3:3001/upload/images/2019/1543645728953-3a3e4054-58e3-449b-9edb-6d6f20d85ae8_bde10d6c48ff7b43d9bbb97907f1148d.png\"\r\n  />\r\n  <DesignCaseItem\r\n    description=\"《南华早报》关于香港少数族裔的报道。蓝色表示男性，红色表示女性，符合一般认知。同时，除了男女占比外，还用圆形面积代表了总人数。特别的，它还将菲律宾人（香港最多的少数族裔）画成了灰色轮廓，固定在底图上，并加入交互功能。这样，用户在滑动到其他族裔（如美国人）时，就可以方便的比较它与菲律宾人的规模差别。这是把简单的饼图，设计的丰富、精巧的案例。\"\r\n    link=\"http://multimedia.scmp.com/news/hong-kong/article/20th-handover/index.html\"\r\n    image=\"http://139.224.62.3:3001/upload/images/2019/1543644866253-29992d89-cd08-4573-9f12-c4196364ffe9_5f3ef6cff573a83b1ca68cd0a74608c6.png\"\r\n  />\r\n  <DesignCaseItem\r\n    description=\"给扇形以装饰，使其更直观、美观的表现所属类别。\"\r\n    link=\"http://www.emilyschramm.com/blog/2017/12/8/thanksgiving-pie-chart\"\r\n    image=\"http://139.224.62.3:3001/upload/images/2019/1543470251577-be0d1f79-89a6-407c-b352-695d8b979f70_57ce59274d9c552e69f643c134510798.png\"\r\n  />\r\n  <DesignCaseItem\r\n    description=\"创意性的使用实物拍摄。\"\r\n    link=\"https://www.sweetspot.com/en/2014/10/21/focus-visualizations-pie-charts/\"\r\n    image=\"http://139.224.62.3:3001/upload/images/2019/1543469706699-b6fd6fbb-809e-43ae-8b83-5ade89f118dd_c7a101e1b16e67dd1b8c60728f9d350a.png\"\r\n  />\r\n  <DesignCaseItem\r\n    description=\"实物装饰+变形处理。\"\r\n    link=\"http://www.peterorntoft.com/infographicsincontext.html\"\r\n    image=\"http://139.224.62.3:3001/upload/images/2019/1544011569937-afbad9d1-68e1-4a9a-98cb-ee989c2cacd9_569001048365d3c3eca890060890e07c.png\"\r\n  />\r\n  <DesignCaseItem\r\n    description=\"《纽约时报》对比了民主党和共和党人士爱用词语的差异。对饼图进行变形（并不从圆心开始划分，而是左右划分），这样很好的契合了政治上两派相争、一左一右的概念，同时方便多个饼图排版——蓝色越多、民主党更爱提、越靠左；红色越多、共和党更爱提、越靠右。\"\r\n    link=\"https://archive.nytimes.com/www.nytimes.com/interactive/2012/09/06/us/politics/convention-word-counts.html#Businesshttp://\"\r\n    image=\"http://139.224.62.3:3001/upload/images/2019/1543480079659-6dc37188-ff73-498f-a84f-620c020d36e1_b26c17b1961748fa8da6e524f39cca96.png\"\r\n  />\r\n</DesignCaseContainer>\r\n\r\n## 使用场景\r\n\r\n1. 通常认为，已知最早的饼图是威廉·普莱菲于 1801 年在他的《统计学摘要》Statistical Breviary 中所作。这张饼图，描述了 1789 年以前土耳其帝国在亚洲、欧洲及非洲中所占的比例。为什么饼图适合表达这个话题呢？第一，其分类变量为亚、欧、非三洲，这三洲的国土构成了土耳其疆域的整体。而我们的目的正是为了表现它们的“占比”。此外，总共三个类别，数量不多不少，不会使饼图太过杂乱。第二，其连续变量为各洲的国土面积，有一个部分（亚洲）占比显著（60%左右），很好辨别。另外，欧洲占比约为 25%，在饼图中呈直角，也方便辨别（这也很可能是作者把欧洲放在 12 点钟方向的原因）。\r\n\r\n<img src=\"http://139.224.62.3:3001/upload/images/2019/1543463720192-d6a22b1a-93d7-4680-8b16-6955250aea8b_c26170ea0bd93bf7058536bbfdba757c.png\" width=\"328\" />\r\n\r\n2. 作为最常见的图表之一，饼图大量的用于各行各业的报告中。例如，研报中经常会出现市场份额的分析。据中金公司研报，2017 年我国的餐饮业营收额中，火锅占到 22%，其次是自助餐（12%）、川菜（8%）、小吃快餐（8%）、西餐（6%）。这 5 种类型的餐饮，营收额占到了整个市场的 56%，尤其以火锅占据绝对优势。\r\n\r\n<img src=\"http://139.224.62.3:3001/upload/images/2019/1549124264533-2e97509a-ff16-4225-bb7d-c9947e13f1e1_7ea3f8d7ce721dc202cf8f9081f5c5b9.png\" width=\"396\" />\r\n\r\n## 制作教程\r\n\r\n<!-- 制作教程大类有：BI 工具 / 代码库 / 设计软件，请依次按照顺序填写 -->\r\n\r\n<ProductionTutorials\r\n  data={{\r\n    'BI 工具': {\r\n      Excel: [\r\n        { link: 'https://support.office.com/zh-cn/article/%E6%B7%BB%E5%8A%A0%E9%A5%BC%E5%9B%BE-1a5f08ae-ba40-46f2-9ed0-ff84873b7863', linkText: '官方基础教程' },\r\n        { link: 'https://zhuanlan.zhihu.com/p/23350815', linkText: '使用颜色插件、调整标签位置' },\r\n        { link: 'https://www.ruhe8.com/article/2539.html', linkText: '画半圆饼图' },\r\n      ],\r\n      'Power BI': [{ link: 'https://www.jianshu.com/p/15a7bbdc464c', linkText: '基础教程' }],\r\n      Tableau: [{ link: 'https://onlinehelp.tableau.com/current/pro/desktop/zh-cn/buildexamples_pie.htm', linkText: '官方基础教程' }],\r\n      QlikView: [{ link: 'https://help.qlik.com/zh-CN/qlikview/November2017/Subsystems/Client/Content/Pie_Chart.htm', linkText: '官方基础文档' }],\r\n    },\r\n    代码库: {\r\n      Echarts: [{ link: 'http://echarts.baidu.com/examples/#chart-type-pie', linkText: '官方实例' }],\r\n      AntV: [{ link: 'https://antv.alipay.com/zh-cn/g2/3.x/demo/pie/innerlabel.html', linkText: '官方实例' }],\r\n      D3: [\r\n        { link: 'https://beta.observablehq.com/@mbostock/d3-pie-chart', linkText: '基础饼图' },\r\n        { link: 'https://bl.ocks.org/santi698/f3685ca8a1a7f5be1967f39f367437c0', linkText: '基础饼图2' },\r\n      ],\r\n      matplotlib: [{ link: 'https://matplotlib.org/api/_as_gen/matplotlib.pyplot.pie.html', linkText: '官方文档及案例' }],\r\n      ggplot2: [\r\n        { link: 'https://ggplot2.tidyverse.org/reference/coord_polar.html', linkText: '官方文档及案例' },\r\n        { link: 'http://www.sthda.com/english/wiki/ggplot2-pie-chart-quick-start-guide-r-software-and-data-visualization', linkText: '基础饼图教程' },\r\n      ],\r\n    },\r\n    设计软件: {\r\n      PS: [\r\n        { link: 'https://www.graphicadi.com/pie-chart-photoshop/', linkText: '官方文档及案例' },\r\n        { link: 'https://www.techwalla.com/articles/how-do-i-make-a-pie-chart-in-photoshop', linkText: '扭曲切割法' },\r\n      ],\r\n      AI: [{ link: 'https://design.tutsplus.com/tutorials/how-to-create-an-editable-pie-chart-in-adobe-illustrator--cms-31336', linkText: 'AI分步教程' }],\r\n      Sketch: [\r\n        { link: 'httpshttp://www.iueux.com/1116.html', linkText: '3种基础方法' },\r\n        { link: 'https://medium.com/d-d-mag/%E7%94%A8-sketch-%E8%99%9B%E7%B7%9A%E5%81%9A%E7%94%9C%E7%94%9C%E5%9C%88%E5%92%8C%E5%9C%93%E9%A4%85-c78e5bb995fc', linkText: '虚线法' },\r\n      ],\r\n    },\r\n  }}\r\n/>\r\n\r\n## 专项工具\r\n\r\n1. <a href=\"https://online.visual-paradigm.com/diagrams.jsp#diagramlist:proj=0&new=PieChart\" target=\"__blank\">\r\n     在线工具：visual-paradigm\r\n   </a>\r\n2. <a href=\"https://www.visme.co/pie-chart-maker/\" target=\"__blank\">\r\n     在线工具：visme\r\n   </a>\r\n\r\n## 学习资源\r\n\r\n1. <a href=\"https://blog.usejournal.com/why-humans-love-pie-charts-9cd346000bdc\" target=\"__blank\">\r\n     【推荐】从历史和进化的角度看人类为何喜欢饼图（英文）\r\n   </a>\r\n2. <a href=\"https://www.sweetspot.com/en/2014/10/21/focus-visualizations-pie-charts/\" target=\"__blank\">\r\n     饼状图入门及使用原则（英文）\r\n   </a>\r\n3. <a href=\"https://www.businessinsider.com/pie-charts-are-the-worst-2013-6\" target=\"__blank\">\r\n     迫不得已不要用饼图（英文）\r\n   </a>\r\n\r\n## 参考文献\r\n\r\n<!-- 为了以下部分有统一的样式，以及展开收起效果，只能手写 hmtl 了 -->\r\n\r\n<Reference>\r\n  <ol>\r\n    <li>Wikipedia. (n.d.). <em>Pie chart</em>. [online]. Available at: https://en.wikipedia.org/wiki/Pie_chart [Accessed 3 December 2018].</li>\r\n    <li>AntV墨者学院. (n.d.). 饼图的简介. [online]. Available at: https://antv.alipay.com/zh-cn/vis/chart/pie.html[Accessed 3 December 2018].</li>\r\n    <li>Wong, D. (2018). Can ‘Made in China 2025’ help turn the nation’s domestic aerospace industry into a world leader?. [online]. Available at: https://multimedia.scmp.com/news/china/article/2170344/china-2025-aviation/index.html?src=follow-chapter [Accessed 3 December 2018].</li>\r\n    <li>Duhalde, M., Wong, D., Arranz, A., Hernandez, M. (n.d.). Twenty years, 20 visualisations. [online]. Available at: http://multimedia.scmp.com/news/hong-kong/article/20th-handover/index.html [Accessed 3 December 2018].</li>\r\n    <li>Schramm, E. (2017). Thanksgiving Pie Chart. [online]. Available at: http://www.emilyschramm.com/blog/2017/12/8/thanksgiving-pie-chart [Accessed 3 December 2018].</li>\r\n    <li>sweetspot. (2014). A focus on visualizations: Pie charts. [online]. Available at: https://www.sweetspot.com/en/2014/10/21/focus-visualizations-pie-charts/ [Accessed 3 December 2018].</li>\r\n    <li>Orntoft, P. (n.d.). Infographics in context. [online]. Available at: http://www.peterorntoft.com/infographicsincontext.html [Accessed 3 December 2018].</li>\r\n    <li>Bostock, M., Carter, S., Ericson, M. (2012). At the National Conventions, the Words They Used.[online]. Available at: https://archive.nytimes.com/www.nytimes.com/interactive/2012/09/06/us/politics/convention-word-counts.html#Businesshttp:// [Accessed 3 December 2018].</li>\r\n    <li>Design your way. (n.d.). Mobile UI Design Inspiration: Charts And Graphs. [online]. Available at: https://www.designyourway.net/blog/inspiration/mobile-ui-design-inspiration-charts-and-graphs/[Accessed 3 December 2018].</li>\r\n    <li>Lima, M. (2018). Why humans love pie charts：An historical and evolutionary perspective. [online]. Available at: https://blog.usejournal.com/why-humans-love-pie-charts-9cd346000bdc [Accessed 3 December 2018].</li>\r\n    <li>McKendry, H. (2014). A focus on visualizations: Pie charts. [online]. Available at: https://www.sweetspot.com/en/2014/10/21/focus-visualizations-pie-charts/ [Accessed 3 December 2018].</li>\r\n    <li>Hickey, W. (2013). The Worst Chart In The World. [online]. Available at: https://www.businessinsider.com/pie-charts-are-the-worst-2013-6 [Accessed 3 December 2018].</li>\r\n  </ol>\r\n</Reference>\r\n\r\n## 贡献者\r\n\r\n<!-- 由于一些工作不体现在 github 提交上，所以还是维持之前手工维护的方式 -->\r\n\r\n<Contributors\r\n  data={{\r\n    Olivia: [{ date: '2018年12月', content: '文档资料搜集、整理和编辑' }],\r\n    Neo: [{ date: '2019年1月', content: '文档审核与编辑' }],\r\n    Gaia: [{ date: '2019年2月', content: '绘图' }],\r\n    小虾: [{ date: '2019年2月', content: '绘图' }],\r\n  }}\r\n/>\r\n`\r\n\r\nexport const templateString = `\r\n# {{name}} - {{enName}}\r\n\r\n\r\n<section class='chart-detail-overview'>\r\n\r\n![pie-chart-overview](https://i.loli.net/2021/09/27/gx8sTAEz53rSwcq.png)\r\n\r\n图表介绍内容\r\n\r\n</section>\r\n\r\n## 图表属性\r\n\r\n<ChartProps />\r\n\r\n## 图表详解\r\n\r\n### 元素构成\r\n\r\n<PlaceHolder>这里少一张图</PlaceHolder>\r\n\r\n### 适用场景\r\n\r\n1. 想要突出表示某个部分在整体中所占比例，尤其该部分所占比例达到总体的 25%或 50%时。\r\n2. 分类数量最好小于 5 个。\r\n\r\n\r\n<img src=\"https://i.loli.net/2021/09/27/kj3sJKaqLXcxyrv.jpg\" width=\"328\" />\r\n\r\n### 不适用场景\r\n\r\n1. 如果变量之间相互独立，并不构成一个整体，那么不可以使用饼图。\r\n\r\n<img src=\"https://i.loli.net/2021/09/27/Vf7NPzm9TdhbF4O.jpg\" width=\"532\" />\r\n\r\n4. 此外，当类别过多时，不建议使用饼图，否则阅读会将很差（如下图）。可行的办法，一是将一些不重要的变量合并为“其他”，避免扇区超过 5 个；二是改用条形图或者表格。尤其是，如果你想让读者清楚的阅读到每一条数据，选用表格会更加直截了当。\r\n\r\n<img src=\"https://i.loli.net/2021/09/27/JYlLvdPAzVyjsIU.jpg\" width=\"566\" />\r\n\r\n## 相似图形\r\n\r\n<SimilarCharts></SimilarCharts>\r\n\r\n## 设计案例\r\n\r\n<DesignCaseContainer>\r\n  <DesignCaseItem\r\n    description=\"用有冲击力的颜色突出最想表现的扇形，其余的则在视觉上弱化处理（比如用灰色处理）。此外，将文字注释巧妙的设计到图形中。\"\r\n    link=\"https://multimedia.scmp.com/news/china/article/2170344/china-2025-aviation/index.html?src=follow-chapter\"\r\n    image=\"http://139.224.62.3:3001/upload/images/2019/1543645728953-3a3e4054-58e3-449b-9edb-6d6f20d85ae8_bde10d6c48ff7b43d9bbb97907f1148d.png\"\r\n  />\r\n  <DesignCaseItem\r\n    description=\"《南华早报》关于香港少数族裔的报道。蓝色表示男性，红色表示女性，符合一般认知。同时，除了男女占比外，还用圆形面积代表了总人数。特别的，它还将菲律宾人（香港最多的少数族裔）画成了灰色轮廓，固定在底图上，并加入交互功能。这样，用户在滑动到其他族裔（如美国人）时，就可以方便的比较它与菲律宾人的规模差别。这是把简单的饼图，设计的丰富、精巧的案例。\"\r\n    link=\"http://multimedia.scmp.com/news/hong-kong/article/20th-handover/index.html\"\r\n    image=\"http://139.224.62.3:3001/upload/images/2019/1543644866253-29992d89-cd08-4573-9f12-c4196364ffe9_5f3ef6cff573a83b1ca68cd0a74608c6.png\"\r\n  />\r\n</DesignCaseContainer>\r\n\r\n## 使用场景\r\n\r\n1. 通常认为，已知最早的饼图是威廉·普莱菲于 1801 年在他的《统计学摘要》Statistical Breviary 中所作。这张饼图，描述了 1789 年以前土耳其帝国在亚洲、欧洲及非洲中所占的比例。为什么饼图适合表达这个话题呢？第一，其分类变量为亚、欧、非三洲，这三洲的国土构成了土耳其疆域的整体。而我们的目的正是为了表现它们的“占比”。此外，总共三个类别，数量不多不少，不会使饼图太过杂乱。第二，其连续变量为各洲的国土面积，有一个部分（亚洲）占比显著（60%左右），很好辨别。另外，欧洲占比约为 25%，在饼图中呈直角，也方便辨别（这也很可能是作者把欧洲放在 12 点钟方向的原因）。\r\n\r\n<img src=\"http://139.224.62.3:3001/upload/images/2019/1543463720192-d6a22b1a-93d7-4680-8b16-6955250aea8b_c26170ea0bd93bf7058536bbfdba757c.png\" width=\"328\" />\r\n\r\n## 制作教程\r\n\r\n<!-- 制作教程大类有：BI 工具 / 代码库 / 设计软件，请依次按照顺序填写 -->\r\n\r\n<ProductionTutorials\r\n  data={{\r\n    'BI 工具': {\r\n      Excel: [\r\n        { link: 'https://support.office.com/zh-cn/article/%E6%B7%BB%E5%8A%A0%E9%A5%BC%E5%9B%BE-1a5f08ae-ba40-46f2-9ed0-ff84873b7863', linkText: '官方基础教程' }\r\n      ],\r\n      'Power BI': [{ link: 'https://www.jianshu.com/p/15a7bbdc464c', linkText: '基础教程' }],\r\n      Tableau: [{ link: 'https://onlinehelp.tableau.com/current/pro/desktop/zh-cn/buildexamples_pie.htm', linkText: '官方基础教程' }],\r\n      QlikView: [{ link: 'https://help.qlik.com/zh-CN/qlikview/November2017/Subsystems/Client/Content/Pie_Chart.htm', linkText: '官方基础文档' }],\r\n    },\r\n    代码库: {\r\n      Echarts: [{ link: 'http://echarts.baidu.com/examples/#chart-type-pie', linkText: '官方实例' }],\r\n      AntV: [{ link: 'https://antv.alipay.com/zh-cn/g2/3.x/demo/pie/innerlabel.html', linkText: '官方实例' }],\r\n      D3: [\r\n        { link: 'https://beta.observablehq.com/@mbostock/d3-pie-chart', linkText: '基础饼图' },\r\n      ],\r\n      matplotlib: [{ link: 'https://matplotlib.org/api/_as_gen/matplotlib.pyplot.pie.html', linkText: '官方文档及案例' }],\r\n      ggplot2: [\r\n        { link: 'https://ggplot2.tidyverse.org/reference/coord_polar.html', linkText: '官方文档及案例' },\r\n      ],\r\n    },\r\n    设计软件: {\r\n      PS: [\r\n        { link: 'https://www.graphicadi.com/pie-chart-photoshop/', linkText: '官方文档及案例' }\r\n      ],\r\n      AI: [{ link: 'https://design.tutsplus.com/tutorials/how-to-create-an-editable-pie-chart-in-adobe-illustrator--cms-31336', linkText: 'AI分步教程' }],\r\n      Sketch: [\r\n        { link: 'httpshttp://www.iueux.com/1116.html', linkText: '3种基础方法' }\r\n      ],\r\n    },\r\n  }}\r\n/>\r\n\r\n## 专项工具\r\n\r\n1. <a href=\"https://online.visual-paradigm.com/diagrams.jsp#diagramlist:proj=0&new=PieChart\" target=\"__blank\">\r\n     在线工具：visual-paradigm\r\n   </a>\r\n\r\n\r\n## 学习资源\r\n\r\n1. <a href=\"https://blog.usejournal.com/why-humans-love-pie-charts-9cd346000bdc\" target=\"__blank\">\r\n     【推荐】从历史和进化的角度看人类为何喜欢饼图（英文）\r\n   </a>\r\n\r\n\r\n## 参考文献\r\n\r\n\r\n<Reference>\r\n  <ol>\r\n    <li>Wikipedia. (n.d.). <em>Pie chart</em>. [online]. Available at: https://en.wikipedia.org/wiki/Pie_chart [Accessed 3 December 2018].</li>\r\n    <li>AntV墨者学院. (n.d.). 饼图的简介. [online]. Available at: https://antv.alipay.com/zh-cn/vis/chart/pie.html[Accessed 3 December 2018].</li>\r\n  </ol>\r\n</Reference>\r\n\r\n## 贡献者\r\n\r\n<!-- 默认读取github commit记录，非commit可以在data中可以自定义 -->\r\n\r\n<Contributors\r\n  data={{\r\n    贡献者: [{ date: '2018-12-01', content: '内容' }],\r\n  }}\r\n  merge\r\n/>\r\n`","import { ChartKnowledgeJSON, CKBJson } from '@antv/knowledge';\r\nimport React from 'react';\r\nimport { Select }  from 'antd';\r\n\r\n\r\nexport const zhCompletedKB = CKBJson('zh-CN', true);\r\nconst options: {\r\n    path: string\r\n    name: string;\r\n}[] = []\r\nfor (const key in zhCompletedKB) {\r\n    const chartInfo = zhCompletedKB[key]\r\n    const { category, purpose, shape, family, name, id } = chartInfo\r\n    options.push({\r\n        path: key,\r\n        name: name,\r\n    })\r\n}\r\nconst { Option } = Select;\r\n\r\nconst CBKSelect: React.FC<{ onChange: (data: ChartKnowledgeJSON) => void }> = (props) => {\r\n    function onChange(value: keyof typeof zhCompletedKB) {\r\n        props.onChange(zhCompletedKB[value]);\r\n    }\r\n    \r\n    function onBlur() {\r\n\r\n    }\r\n    \r\n    function onFocus() {\r\n\r\n    }\r\n    \r\n    function onSearch(val: string) {\r\n\r\n    }\r\n  return (\r\n    <Select\r\n        showSearch\r\n        style={{ width: 380 }}\r\n        placeholder=\"Select a person\"\r\n        optionFilterProp=\"children\"\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        onSearch={onSearch}\r\n        filterOption={(input, option) =>\r\n            option ? option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0 : false\r\n        }\r\n    >\r\n        {\r\n            options.map(item => {\r\n                return  <Option key={item.path} value={item.path}>{item.name}-{item.path}</Option>\r\n            })\r\n        }\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default CBKSelect","\r\n/**\r\n * \r\n * @param {string} string \r\n * @returns {(data?: any) => string}\r\n * @example\r\n * template('I am {{name}}')({name: 'Super man'}) \r\n * // => 'I am Super man'\r\n * var compiled = template('I am {{name}}')\r\n * compiled({name: 'Super man'})\r\n * // => 'I am Super man'\r\n */\r\nfunction template(string: string, interpolate: RegExp = /{{([\\s\\S]+?)}}/g) {\r\n    return function(data: Record<string, any>) {\r\n        return string.replace(interpolate, function(match, $1) {\r\n            const key = $1\r\n            if (data[key] == null) {\r\n                return match\r\n            }\r\n            return data[key]\r\n        });\r\n    }\r\n}\r\nexport default template","import React, { useMemo } from \"react\";\nimport { render } from \"react-dom\";\nimport MDX from \"@mdx-js/runtime\";\nimport { Editor, Viewer } from '@bytemd/react'\nimport { Row, Col, Button, Space, notification, Modal } from 'antd';\nimport frontmatter from '@bytemd/plugin-frontmatter'\nimport gfm from '@bytemd/plugin-gfm'\nimport highlight from '@bytemd/plugin-highlight';\nimport { ChartKnowledgeJSON, CKBJson } from '@antv/knowledge';\n// 设计案例\nimport DesignCase from './components/DesignCase';\n// 制作教程\nimport { ProductionTutorials } from './components/ProductionTutorials';\n// 参考文献\nimport { Reference } from './components/Reference';\n// 贡献者\nimport { Contributors } from './components/Contributors';\nimport { SimilarCharts } from './components/SimilarCharts'\nimport { ChartProps } from './components/ChartProps'\nimport { uploadImg, uploadURL } from \"./api/upload\";\nimport { mdxString, templateString } from \"./template\";\nimport CBKSelect from \"./components/CBKSelect\";\nimport exportFile from \"./utils/exportFile\";\nimport template from \"./utils/template\";\nimport { toHump } from \"./utils\";\n\nimport './document.css';\n\nimport './App.css'\n\n\nconst PlaceHolder: React.FC<any> = ({ children }) => {\n  return <em style={{ opacity: 0.65 }}>{children}</em>;\n}\n\n// Provide custom components for markdown elements\nconst components = {\n  PlaceHolder,\n  DesignCaseContainer: DesignCase.Container,\n  DesignCaseItem: DesignCase.Item,\n  ProductionTutorials,\n  Reference,\n  Contributors,\n  SimilarCharts,\n  ChartProps,\n};\n// Provide variables that might be referenced by JSX\nconst scope = {\n  some: \"value\"\n};\n\nconst plugins =[\n  frontmatter(),\n  gfm(),\n  highlight(),\n]\nfunction App() {\n  const [content, setContent] = React.useState(mdxString);\n  const [loading, setLoading] = React.useState(false);\n  const [isModalVisible, setModalVisible] = React.useState(false);\n  const [chartInfo, setChartInfo] = React.useState<ChartKnowledgeJSON>();\n  // @ts-ignore\n  const onChange = (newValue: string) => {\n    setContent(newValue);\n  };\n  const uploadImages = async (files: File[]) => {\n\n    const file = files[0];\n    if (!file) {\n      return []\n    }\n    const result = await uploadImg({smfile: file})\n\n    const imgList = []\n    for (const name in result) {\n      if (Object.prototype.hasOwnProperty.call(result, name)) {\n        const url: string = result[name];\n        imgList.push({title: file.name, alt: file.name, url: url.replace('https:', '')})\n      }\n    }\n    return imgList\n  }\n  const handleRepalceAllImg = async () => {\n    const imgReg = /http:\\/\\/\\S*((\\.png)|(\\.jpeg))/g;\n    const matchList = content.match(imgReg)\n    if (!Array.isArray(matchList)) {\n      return\n    }\n    let newCotnet = content\n    for (const url of matchList) {\n      setLoading(true)\n      try {\n        const result = await uploadURL([url])\n        for (const oldURL in result) {\n          if (Object.prototype.hasOwnProperty.call(result, oldURL)) {\n            const neURL = result[oldURL].replace('https:', '');\n            newCotnet = newCotnet.replace(oldURL, neURL)\n          }\n        }\n        setContent(newCotnet)\n        setLoading(false)\n        notification.success({\n          message: `替换成功`,\n          description: `${url}`,\n        })\n      } catch (error) {\n        notification.warn({\n          message: `替换失败`,\n          description: `${url}`,\n        })\n        setLoading(false)\n      }\n    }\n  } \n  const createTemplate = () => {\n    if (chartInfo) {\n      var compiled = template(templateString);\n\n      setContent(compiled({\n        ...chartInfo,\n        enName: toHump(chartInfo.id)\n      }));\n    }\n    handleCancel();\n  }\n  const handleCancel  = () => {\n    setModalVisible(false);\n  }\n  const openModal = () => {\n    setModalVisible(true);\n  }\n  const handleTemplateSelectChange = (data: any) => {\n    setChartInfo(data);\n  }\n  const downloadFile = () => {\n    if (chartInfo) {\n      exportFile(content, `${chartInfo.id}.mdx`)\n    }\n  }\n  return (\n    <div>\n      <div  style={{height: 10}}/>\n      <Space>\n        <Button onClick={handleRepalceAllImg} loading={loading}>一键替换http图片(比较慢)</Button>\n        <Button href=\"https://sm.ms/\" target=\"_blank\">sm.ms</Button>\n        <Button href=\"https://imgbb.com/\" target=\"_blank\">imgbb.com</Button>\n        <Button onClick={openModal} type=\"primary\" >新建模板</Button>\n        <Button onClick={downloadFile} type=\"primary\" disabled={chartInfo === undefined} >下载mdx文件</Button>\n      </Space>\n      <div  style={{height: 10}}/>\n      <Editor\n        mode=\"auto\"\n        value={content}\n        onChange={onChange}\n        uploadImages={uploadImages}\n        plugins={plugins}\n        overridePreview={(el, props) => { \n          render(\n            <div className=\"markdown-body chart-container pg-chart\" {...props}>\n              <MDX scope={scope} components={components}>{content}</MDX>  \n            </div>\n          , el)\n        }}\n      />\n      <Modal title=\"\" visible={isModalVisible} onOk={createTemplate} onCancel={handleCancel}>\n        <CBKSelect onChange={handleTemplateSelectChange} />\n\n        <p style={{marginTop: 20}}>没有你创建的图表，前往<a href=\"https://github.com/Plothis/gradict-charts-doc/blob/dev/src/constants/charts.ts\">gradict-charts-doc</a>新增一个吧</p>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useContext } from 'react';\r\n\r\nimport { ChartContext } from './context';\r\n\r\n\r\nexport const ChartProps: React.FC<{ name: string }> = (props) => {\r\n  const { currentChart } = useContext(ChartContext);\r\n  let propsMap: Record<string, string[]> = {}\r\n  if (currentChart) {\r\n    propsMap = {\r\n      '形状': currentChart.shape,\r\n      '图类': currentChart.category,\r\n      '功能': currentChart.purpose,\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ marginBottom: '18px' }}>\r\n     <i>此处会自动识别, 无需改动</i>\r\n      {/* <ul>\r\n        {Object.keys(propsMap).map((typeName, index) => {\r\n          return (\r\n            <li key={typeName}>\r\n              <strong>{typeName}：</strong>{propsMap[typeName].join(' • ')}\r\n            </li>\r\n          )\r\n        })}\r\n      </ul> */}\r\n    </div>\r\n  );\r\n};","/**\n * 文本内容导出文件\n * 支持JSON, html\n */\nexport default function exportFile(content: string, fileName: string) {\n    // 创建隐藏的可下载链接\n    const eleLink = document.createElement('a');\n    eleLink.download = fileName;\n    eleLink.style.display = 'none';\n    // 字符内容转变成blob地址\n    const blob = new Blob([content]);\n    eleLink.href = URL.createObjectURL(blob);\n    // 触发点击\n    document.body.appendChild(eleLink);\n    eleLink.click();\n    // 然后移除\n    document.body.removeChild(eleLink);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bytemd/dist/index.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}